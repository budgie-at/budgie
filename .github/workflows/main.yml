name: Deploy production
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  EXPO_APPLE_TEAM_TYPE: INDIVIDUAL
  EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
  GH_TOKEN: ${{ secrets.PUSH_TO_PROTECTED_TOKEN }}

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Publish a release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn

      - name: Setup Git user
        run: |
          git config user.name "Vitalii Yehorov"
          git config user.email "vitalyiegorov@gmail.com"
          git remote rm origin
          git remote add origin https://vitalyiegorov:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git fetch
          git branch --set-upstream-to=origin/main main

      - name: Install dependencies
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: true
        run: yarn install

      - name: Publish a release
        run: yarn release

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PUSH_TO_PROTECTED_TOKEN }}

  web-deploy:
    name: Vercel deploy Web
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: yarn install

      - name: Build expo web
        working-directory: packages/app
        run: npx expo export --platform=web

      - name: Deploy to Vercel
        working-directory: packages/app/dist
        run: |
          echo "!node_modules" > .vercelignore
          cp ../vercel.json .
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

  eas-update:
    name: EAS Update
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: Publish update
        working-directory: packages/app
        run: eas update --auto
