name: Merge Request
env:
  TURBO_TEAM: vitalyiegorov
  TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  PR_NUMBER: ${{ github.event.pull_request.number }}
  PR_TITLE: ${{ github.event.pull_request.title }}
  MAESTRO_CLI_NO_ANALYTICS: false

on: pull_request

jobs:
  code-quality:
    name: Code quality checks
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Lint the PR Title
        run: echo "${{env.PR_TITLE}}" | node_modules/.bin/commitlint

      - name: Typescript checks
        run: yarn turbo ts

      - name: ESLint checks
        run: yarn turbo lint

      - name: Deadcode detection
        run: yarn turbo deadcode

      - name: Copy/Paste detection
        run: yarn turbo cpd

      - name: Unit tests
        run: yarn test:coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  eas-deploy:
    name: EAS Deploy
    needs: code-quality
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      deployments: write
      issues: write
    outputs:
      deployment_url: ${{ steps.deploy-web.outputs.deployment_url }}
      projectId: ${{ steps.create-preview.outputs.projectId }}
      iosGroupId: ${{ steps.create-preview.outputs.iosGroupId }}
      androidGroupId: ${{ steps.create-preview.outputs.androidGroupId }}
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project."
            echo "Learn more: https://docs.expo.dev/eas/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: Create preview
        id: create-preview
        uses: expo/expo-github-action/preview@v8
        with:
          command: eas update --channel development --auto
          working-directory: packages/app

      - name: Build web app
        working-directory: packages/app
        run: npx expo export --platform web

      - name: Deploy web app
        id: deploy-web
        working-directory: packages/app
        run: |
          result="$(eas deploy --non-interactive --json)"
          echo "$result"

          # Extract the URL from the deployment result
          url=$(echo "$result" | jq -r '.url // empty')
          if [ -n "$url" ]; then
            echo "deployment_url=$url" >> $GITHUB_OUTPUT
            echo "## 🚀 Web App Deployment" >> $GITHUB_STEP_SUMMARY
            echo "Your PR has been deployed and is available at: [$url]($url)" \
              >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create deployment environment
        if: steps.deploy-web.outputs.deployment_url
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy-web.outputs.deployment_url }}';

            // Create deployment
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              environment: 'preview',
              description: 'PR Preview Deployment',
              auto_merge: false,
              required_contexts: []
            });

            // Create deployment status
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: deploymentUrl,
              description: 'Web app deployed successfully'
            });

      - name: Comment deployment URL on PR
        if: steps.deploy-web.outputs.deployment_url
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy-web.outputs.deployment_url }}';
            const prNumber = context.payload.pull_request.number;

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const existingComment = comments.data.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('🚀 Preview Deployment')
            );

            const commentBody = '## 🚀 Preview Deployment\n\n' +
              'Your PR has been deployed! You can test the changes at:\n\n' +
              '🌐 **[Open Preview App](' + deploymentUrl + ')**\n\n' +
              'This deployment will be automatically updated with new commits.';

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  e2e-ios:
    needs: [code-quality, eas-deploy]
    name: E2E Tests on iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: Build app
        working-directory: packages/app
        run: |
          eas build --profile=ios-simulator --platform ios --non-interactive --local
          tar -xzf "$(ls build-*.tar.gz 2>/dev/null)"

      - name: Install Maestro
        run: |
          curl -fsSL "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Start iOS Simulator
        uses: futureware-tech/simulator-action@v4
        with:
          model: 'iPhone 15 Pro'

      - name: Install App on Simulator
        working-directory: packages/app
        run: |
          xcrun simctl install booted "$(ls *.app)"

      - name: Run Maestro UI tests
        working-directory: tests/app-tests
        run: |
          maestro test flows -e APP_ID=com.vitalyiegorov.suuudokuuu.dev --format junit --output ./report.xml --debug-output ./

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "maestro-ios-report"
          include-hidden-files: true
          path: |
            tests/app-tests/.maestro/tests
            tests/app-tests/report.xml

  e2e-android:
    needs: [ code-quality, eas-deploy ]
    name: E2E Tests on Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Build app
        working-directory: packages/app
        run: |
          eas build --profile=development --platform android --non-interactive --local
          tar -xzf "$(ls build-*.tar.gz 2>/dev/null)"

      - name: Install Maestro
        run: |
          curl -fsSL "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-33

      - name: Create AVD and Generate Snapshot for Caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Start emulator and run Maestro tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          working-directory: tests/app-tests
          script: |
            adb install "$(ls ../../packages/app/*.apk)"
            maestro test flows -e APP_ID=com.vitaliiyehorov.suuudokuuu.dev --format junit --output ./report.xml --debug-output ./

      - name: Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "maestro-android-report"
          include-hidden-files: true
          path: |
            tests/app-tests/.maestro/tests
            tests/app-tests/report.xml
